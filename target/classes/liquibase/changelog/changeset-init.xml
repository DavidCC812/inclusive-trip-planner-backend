<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd">

    <changeSet id="1" author="david">
        <sql dbms="postgresql" endDelimiter=";" splitStatements="false" stripComments="true">

            CREATE
            EXTENSION IF NOT EXISTS "uuid-ossp";

            CREATE TABLE users
            (
                id            UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
                name          VARCHAR        NOT NULL,
                nickname      VARCHAR,
                email         VARCHAR UNIQUE NOT NULL,
                password_hash VARCHAR        NOT NULL,
                phone         VARCHAR,
                created_at    TIMESTAMP        DEFAULT CURRENT_TIMESTAMP,
                updated_at    TIMESTAMP        DEFAULT CURRENT_TIMESTAMP
            );

            CREATE TABLE settings
            (
                id            UUID PRIMARY KEY        DEFAULT uuid_generate_v4(),
                setting_key   VARCHAR UNIQUE NOT NULL,
                label         VARCHAR        NOT NULL,
                description   TEXT,
                default_value BOOLEAN        NOT NULL DEFAULT FALSE,
                created_at    TIMESTAMP               DEFAULT CURRENT_TIMESTAMP,
                updated_at    TIMESTAMP               DEFAULT CURRENT_TIMESTAMP
            );

            CREATE TABLE user_settings
            (
                id         UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
                user_id    UUID REFERENCES users (id),
                setting_id UUID REFERENCES settings (id),
                value      BOOLEAN NOT NULL,
                created_at TIMESTAMP        DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP        DEFAULT CURRENT_TIMESTAMP,
                UNIQUE (user_id, setting_id)
            );

            CREATE TABLE accessibility_features
            (
                id         UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
                name       VARCHAR NOT NULL,
                created_at TIMESTAMP        DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP        DEFAULT CURRENT_TIMESTAMP
            );

            CREATE TABLE user_accessibility_features
            (
                id         UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
                user_id    UUID REFERENCES users (id),
                feature_id UUID REFERENCES accessibility_features (id),
                created_at TIMESTAMP        DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP        DEFAULT CURRENT_TIMESTAMP,
                UNIQUE (user_id, feature_id)
            );

            CREATE TABLE countries
            (
                id         UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
                name       VARCHAR NOT NULL UNIQUE,
                available  BOOLEAN NOT NULL DEFAULT TRUE,
                created_at TIMESTAMP        DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP        DEFAULT CURRENT_TIMESTAMP
            );

            CREATE TABLE user_country_access
            (
                id         UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
                user_id    UUID REFERENCES users (id),
                country_id UUID REFERENCES countries (id),
                created_at TIMESTAMP        DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP        DEFAULT CURRENT_TIMESTAMP,
                UNIQUE (user_id, country_id)
            );

            CREATE TABLE destinations
            (
                id         UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
                name       VARCHAR NOT NULL,
                type       VARCHAR NOT NULL,
                available  BOOLEAN NOT NULL DEFAULT TRUE,
                country_id UUID    NOT NULL REFERENCES countries (id),
                created_at TIMESTAMP        DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP        DEFAULT CURRENT_TIMESTAMP
            );
            CREATE TABLE user_selected_destinations
            (
                id             UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
                user_id        UUID REFERENCES users (id),
                destination_id UUID REFERENCES destinations (id),
                created_at     TIMESTAMP        DEFAULT CURRENT_TIMESTAMP,
                updated_at     TIMESTAMP        DEFAULT CURRENT_TIMESTAMP,
                UNIQUE (user_id, destination_id)
            );
            CREATE TABLE itineraries
            (
                id             UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
                title          VARCHAR NOT NULL,
                description    TEXT,
                price          DECIMAL,
                duration       INTEGER,
                rating         FLOAT,
                destination_id UUID REFERENCES destinations (id),
                created_at     TIMESTAMP        DEFAULT CURRENT_TIMESTAMP,
                updated_at     TIMESTAMP        DEFAULT CURRENT_TIMESTAMP
            );

            CREATE TABLE itinerary_accessibility
            (
                id           UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
                itinerary_id UUID REFERENCES itineraries (id),
                feature_id   UUID REFERENCES accessibility_features (id),
                created_at   TIMESTAMP        DEFAULT CURRENT_TIMESTAMP,
                updated_at   TIMESTAMP        DEFAULT CURRENT_TIMESTAMP,
                UNIQUE (itinerary_id, feature_id)
            );

            CREATE TABLE itinerary_steps
            (
                id           UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
                itinerary_id UUID REFERENCES itineraries (id),
                step_index   INTEGER,
                title        VARCHAR NOT NULL,
                description  TEXT,
                latitude     DECIMAL,
                longitude    DECIMAL,
                created_at   TIMESTAMP        DEFAULT CURRENT_TIMESTAMP,
                updated_at   TIMESTAMP        DEFAULT CURRENT_TIMESTAMP
            );

            CREATE TABLE saved_itineraries
            (
                id           UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
                user_id      UUID REFERENCES users (id),
                itinerary_id UUID REFERENCES itineraries (id),
                saved_at     TIMESTAMP        DEFAULT CURRENT_TIMESTAMP,
                created_at   TIMESTAMP        DEFAULT CURRENT_TIMESTAMP,
                updated_at   TIMESTAMP        DEFAULT CURRENT_TIMESTAMP
            );

            CREATE TABLE reviews
            (
                id           UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
                user_id      UUID REFERENCES users (id),
                itinerary_id UUID REFERENCES itineraries (id),
                rating       FLOAT,
                comment      TEXT,
                created_at   TIMESTAMP        DEFAULT CURRENT_TIMESTAMP,
                updated_at   TIMESTAMP        DEFAULT CURRENT_TIMESTAMP
            );

            -- Indexes
            CREATE INDEX idx_user_settings_user_id ON user_settings (user_id);
            CREATE INDEX idx_user_access_user_id ON user_accessibility_features (user_id);
            CREATE INDEX idx_user_access_feature_id ON user_accessibility_features (feature_id);
            CREATE INDEX idx_dest_type ON destinations (type);
            CREATE INDEX idx_dest_country_id ON destinations (country_id);
            CREATE INDEX idx_itin_dest_id ON itineraries (destination_id);
            CREATE INDEX idx_itin_access_itin_id ON itinerary_accessibility (itinerary_id);
            CREATE INDEX idx_itin_access_feature_id ON itinerary_accessibility (feature_id);
            CREATE INDEX idx_user_selected_dest_user_id ON user_selected_destinations (user_id);
            CREATE INDEX idx_user_selected_dest_dest_id ON user_selected_destinations (destination_id);
            CREATE INDEX idx_steps_itin_id ON itinerary_steps (itinerary_id);
            CREATE INDEX idx_saved_user_id ON saved_itineraries (user_id);
            CREATE INDEX idx_saved_itin_id ON saved_itineraries (itinerary_id);
            CREATE INDEX idx_reviews_user_id ON reviews (user_id);
            CREATE INDEX idx_reviews_itin_id ON reviews (itinerary_id);
            CREATE INDEX idx_user_country_access_user_id ON user_country_access (user_id);
            CREATE INDEX idx_user_country_access_country_id ON user_country_access (country_id);

        </sql>
    </changeSet>

    <changeSet id="2" author="david">
        <sql dbms="postgresql">
            ALTER TABLE users ALTER COLUMN password_hash DROP NOT NULL;
        </sql>
    </changeSet>

    <changeSet id="3" author="david">
        <sql dbms="postgresql">
            ALTER TABLE itineraries ADD COLUMN image_url VARCHAR(500);
        </sql>
    </changeSet>

    <changeSet id="4" author="david">
        <sql dbms="postgresql">
            ALTER TABLE users ADD COLUMN platform VARCHAR NOT NULL DEFAULT 'EMAIL';
        </sql>
    </changeSet>

    <changeSet id="5" author="david">
        <sql dbms="postgresql">
            ALTER TABLE users ADD COLUMN oauth_token TEXT;
        </sql>
    </changeSet>






</databaseChangeLog>
